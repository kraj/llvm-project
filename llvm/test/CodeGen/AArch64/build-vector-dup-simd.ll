; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=aarch64 | FileCheck %s

define <4 x float> @dup32(float %a, float %b) {
; CHECK-LABEL: dup32:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    fcmgt s0, s0, s1
; CHECK-NEXT:    dup v0.4s, v0.s[0]
; CHECK-NEXT:    ret
entry:
  %0 = fcmp ogt float %a, %b
  %vcmpd.i = sext i1 %0 to i32
  %vecinit.i = insertelement <4 x i32> poison, i32 %vcmpd.i, i64 0
  %1 = bitcast <4 x i32> %vecinit.i to <4 x float>
  %2 = shufflevector <4 x float> %1, <4 x float> poison, <4 x i32> zeroinitializer
  ret <4 x float> %2
}

define <2 x double> @dup64(double %a, double %b) {
; CHECK-LABEL: dup64:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    fcmgt d0, d0, d1
; CHECK-NEXT:    dup v0.2d, v0.d[0]
; CHECK-NEXT:    ret
entry:
  %0 = fcmp ogt double %a, %b
  %vcmpd.i = sext i1 %0 to i64
  %vecinit.i = insertelement <2 x i64> poison, i64 %vcmpd.i, i64 0
  %1 = bitcast <2 x i64> %vecinit.i to <2 x double>
  %2 = shufflevector <2 x double> %1, <2 x double> poison, <2 x i32> zeroinitializer
  ret <2 x double> %2
}
